node:
  cluster: test
  id: test-id-1
admin:
  address:
    socket_address: { address: 127.0.0.1, port_value: 9901 }
static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 13334
      listener_filters:
        - name: tls_inspector
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
      filter_chains:
        - filter_chain_match:
            transport_protocol: tls
          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_https
                upgrade_configs:
                  - upgrade_type: websocket
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: app
                      domains:
                        - '*'
                      routes:
                        - match:
                            prefix: '/'
                          route:
                            cluster: test
                            # Some of the image layers are large and take a long time to upload/download.
                            # The default transaction timeout is 15s so we would often send a 504 timeout.
                            # Setting this timeout to 0s ensure that we never timeout a transaction.
                            timeout: '0s'
                http_filters:
                  - name: envoy.filters.http.lua
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          local stream_info = request_handle:streamInfo()
                          local ssl_connection_info = stream_info:downstreamSslConnection()
                          if ssl_connection_info:peerCertificatePresented() then
                            print("peer certificate is presented")
                            request_handle:logInfo("Downstream connection is using MTLS")
                            request_handle:headers():add("x-forwarded-client-cert", "true")
                          end
                          request_handle:headers():add("X-Path", request_handle:headers():get(":path"))
                        end
                  - name: envoy.filters.http.oauth2
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
                      config:
                        token_endpoint:
                          cluster: oauth
                          uri: dev-34238201.okta.com/oauth2/v1/token
                          timeout: 3s
                        authorization_endpoint: https://dev-34238201.okta.com/oauth2/v1/authorize
                        # redirect_uri: "%REQ(x-forwarded-proto)%://%REQ(:authority)%/callback"
                        redirect_uri: 'https://localhost:13334/callback'
                        pass_through_matcher:
                          - name: x-forwarded-client-cert
                            present_match: true
                        redirect_path_matcher:
                          path:
                            exact: /callback
                        signout_path:
                          path:
                            exact: /signout
                        credentials:
                          client_id: 0oaleelghwn3KyymT5d7
                          token_secret:
                            name: oidc-secret
                            sds_config:
                              path: '/etc/envoy/oidc-secret.yaml'
                          hmac_secret:
                            name: hmac
                            sds_config:
                              path: '/etc/envoy/hmac-secret.yaml'
                        # (Optional): defaults to 'user' scope if not provided
                        auth_scopes:
                          - email
                          - openid
                          - profile
                          - groups

                  - name: envoy.ext_authz
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      transport_api_version: V3
                      with_request_body:
                        max_request_bytes: 8192
                        allow_partial_message: true
                      failure_mode_allow: false
                      grpc_service:
                        google_grpc: # or envoy_grpc
                          target_uri: localhost:9191
                          stat_prefix: ext_authz
                        timeout: 0.5s

                  # (Optional): set resource parameter for Authorization request
                  - name: envoy.filters.http.router
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              # require_client_certificate: true
              common_tls_context:
                validation_context:
                  trusted_ca:
                    filename: '/var/run/autocert.step.sm/root.crt'
                tls_certificates:
                  - certificate_chain:
                      filename: '/var/run/autocert.step.sm/site.crt'
                    private_key:
                      filename: '/var/run/autocert.step.sm/site.key'
  clusters:
    - name: test
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: test
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 9888
    - name: oauth
      connect_timeout: 5s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: oauth
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: dev-34238201.okta.com
                      port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: dev-34238201.okta.com
