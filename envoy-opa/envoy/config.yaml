static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8000
      filter_chains:
      # mTLS filter chain for inter-service requests
      - filter_chain_match:
          transport_protocol: "tls"
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            require_client_certificate: true
            common_tls_context:
              tls_certificates:
                - certificate_chain: { filename: "/etc/envoy/certs/server-cert.pem" }
                  private_key: { filename: "/etc/envoy/certs/server-key.pem" }
              validation_context:
                trusted_ca: { filename: "/etc/envoy/certs/ca-cert.pem" }
        filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: mTLS_service
              route_config:
                name: mtls_route
                virtual_hosts:
                - name: mtls_backend
                  domains: ["*"]
                  routes:
                    - match: { prefix: "/" }
                      route: { cluster: service }
              http_filters:
                - name: envoy.ext_authz
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                    grpc_service:
                      google_grpc:
                        target_uri: opa:9191
                        stat_prefix: ext_authz
                - name: envoy.filters.http.router
                  typed_config: {}

      # TLS-only filter chain for OAuth user requests
      - filter_chain_match:
          transport_protocol: "tls"
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
            require_client_certificate: false
        filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: oauth_user
              route_config:
                name: user_route
                virtual_hosts:
                - name: oauth_backend
                  domains: ["*"]
                  routes:
                    - match: { prefix: "/" }
                      route: { cluster: service }
              http_filters:
                - name: envoy.filters.http.jwt_authn
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                    providers:
                      custom_provider:
                        issuer: "self"
                        audiences: ["wasabiuser"]
                        local_jwks:
                          inline_string: |
                            {
                              "keys": [
                                {
                                  "kty": "oct",
                                  "alg": "HS256",
                                  "k": "bXlzZWNyZXQ="
                                }
                              ]
                            }
                - name: envoy.ext_authz
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                    grpc_service:
                      google_grpc:
                        target_uri: opa:9191
                        stat_prefix: ext_authz
                - name: envoy.filters.http.router
                  typed_config: {}
  clusters:
    - name: service
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: service
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: dummy-api
                  port_value: 8080
admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
layered_runtime:
  layers:
    - name: static_layer_0
      static_layer:
        envoy:
          resource_limits:
            listener:
              example_listener_name:
                connection_limit: 10000
        overload:
          global_downstream_max_connections: 50000